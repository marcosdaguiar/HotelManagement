services:
  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hotel_front
    hostname: hotel_front
    ports:
      - 30000:3000
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - local
    stdin_open: true
    tty: true
    environment:
      - WATCHPACK_POLLING=true

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: hotel_back
    hostname: hotel_back
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm start
    restart: always
    environment:
      NODE_ENV: development
      DB_HOST: mysql
      DB_USER: hoteldb_user
      DB_PASSWORD: passpass
      DB_NAME: hoteldb1
    ports:
      - 50000:5000
    depends_on:
      - mysql
    networks:
      - local

  mysql:
    image: mysql
    container_name: mysql
    hostname: mysql
    #command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hoteldb1
      MYSQL_USER: hoteldb_user
      MYSQL_PASSWORD: passpass
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - db:/var/lib/mysql
    ports:
      - 33060:3306
    networks:
      - local

networks:
  local:
    driver: bridge

volumes:
  db:
